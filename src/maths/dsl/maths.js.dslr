name:identifier /=/ expr -> assignment -> expr
<<<
const $name = $expr
<<<

name:identifier args:identifier+ /=/ expr -> assignment -> expr
<<<
const $name = ($args[, ]) => $expr
<<<

/let/ assignments:assignment* /in/ expr -> let -> expr
<<<
(() => {
  $assignments[\n]
  return $expr
})()
<<<

identifier args:expr*->  call  ->  expr
<<<
$identifier($args[, ])
<<<

left:expr operator:/[\(\)\^\/*+-]/ right:expr ->  arithmetic  ->  expr
<<<
$left $operator $right
<<<

/\[/ xs:( expr /,/? )* /\]/ ->  list  ->  expr
<<<
[ $xs.expr[, ] ]
<<<

g:identifier . f:identifier -> composition -> expr
<<<
() => g(f.call(arguments))
<<<